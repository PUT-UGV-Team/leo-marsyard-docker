obstacle_range: 20.0
raytrace_range: 25

footprint: [[-0.210, -0.225], [-0.210, 0.225], [0.210, 0.225], [0.210, -0.225]]

#robot_radius: 0.17

#plugin:
#  - {name: rgbd_obstacle_layer, type: "spatio_temporal_voxel_layer/SpatioTemporalVoxelLayer"}
#  - {name: inflation_layer,   type: "costmap_2d::InflationLayer"}



inflation_layer:
  inflation_radius: 1.0
  cost_scaling_factor: 3.0


rgbd_obstacle_layer:
  enabled:                  true
  voxel_decay:              90.0  # seconds if linear, e^n if exponential
  decay_model:              0     # 0=linear, 1=exponential, -1=persistent
  voxel_size:               0.1  # meters
  track_unknown_space:      true  # default space is known
  max_obstacle_height:      5.0   # meters
  unknown_threshold:        10    # voxel height
  mark_threshold:           5     # voxel height
  update_footprint_enabled: true
  combination_method:       1     # 1=max, 0=override
  origin_z:                 1.0   # meters
  publish_voxel_map:        true # default off
  transform_tolerance:      0.2   # seconds
  mapping_mode:             false # default off, saves map not for navigation
  map_save_duration:        60.0  # default 60s, how often to autosave
  observation_sources:      rgbd1_mark rgbd1_clear
  rgbd1_mark:
    data_type: PointCloud2
    topic: rtabmap/cloud_obstacles
    marking: true
    clearing: false
    obstacle_range: 5.0          # meters
    min_obstacle_height: 0.1     # default 0, meters
    max_obstacle_height: 2.5     # default 3, meters
    expected_update_rate: 0    # default 0, if not updating at this rate at least, remove from buffer
    observation_persistence: 0.0 # default 0, use all measurements taken during now-value, 0=latest
    inf_is_valid: false          # default false, for laser scans
    filter: "passthrough"        # default passthrough, apply "voxel", "passthrough", or no filter to sensor data, recommend on 
    voxel_min_points: 10          # default 0, minimum points per voxel for voxel filter
    clear_after_reading: true    # default false, clear the buffer after the layer gets readings from it
  rgbd1_clear: 
    data_type: PointCloud2
    topic: rtabmap/cloud_obstacles  #voxel_filter_output
    marking: false
    clearing: true
    max_z: 1                  # default 0, meters
    min_z: 5.0                 # default 10, meters
    vertical_fov_angle: 0.8745  # default 0.7, radians
    horizontal_fov_angle: 1.048 # default 1.04, radians
    decay_acceleration: 5.0     # default 0, 1/s^2. If laser scanner MUST be 0
    model_type: 0                # default 0, model type for frustum. 0=depth camera, 1=3d lidar like VLP16 or similar
